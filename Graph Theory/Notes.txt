Graph Theory:
    Undirected Graph- Edges are not directed. If there is an edge (u,v), then (v,u) also exists
    Directed Graphs - edges are directed.
    Weighted Graphs - edges have weight attached to them.
    

    Tree - Undirected graph with no cycles. (or graph with n nodes and n-1 edges)
    Rooted tree -  it has a designated root node. 

    Directed Acyclic Graphs - directed graphs with no cycles. 
                            - all out-trees are DAGs but not all DAGs are out-trees.
    
    Bipartite Graph- a graph whose vertices can be split into two independent groups U,V such that 
                     that every edge connects b/w u and v.
    
    Complete Graph- where unique edge between every pair of nodes. 


Adjacency List (Sparse Graph) and Adjacency Matrix (Dense Graph).    
Edge List - unordered list of edges. 

Graph Theory Problems:

1. Shortest Path Problem - Given a weighted graph, find the shortest path of edges from node A to node B. (BFS, Dijkstra)
2. Connectivity - Does there exist a path between node A and node B. (Use Union Find Data Structure or Search Algo like DFS/BFS)
3. Negative Cycles - (Bellman-Ford and Floyd Warshall)
4. Travelling Salesman Problem - NP-Hard. (Held-Karp, Approximation Algorithm)
5. Bridges - 
6. Articulation Points
7. Minimum Spanning Tree - subset of edges of a connected graph that connects all vertices together without any cycles and with the minimum possible total edge weight. (Kruskal's and Prim's Algo)
8. Network Flow: Max Flow (Ford-Fulkerson)

Depth First Search Algorithm:
 